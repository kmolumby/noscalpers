{"ast":null,"code":"import _defineProperty from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/src/PostsContainer/PostsContainer.jsx\";\nimport React, { Component } from 'react';\nimport PostsList from './PostsList/PostsList';\nimport CreatePost from './CreatePost/CreatePost';\nimport EditPost from './EditPost/EditPost';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts() {\n    var _this;\n\n    _classCallCheck(this, Posts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Posts).call(this));\n    _this.getPosts =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var posts, postsJSON;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:9000/posts');\n\n            case 2:\n              posts = _context.sent;\n              _context.next = 5;\n              return posts.json();\n\n            case 5:\n              postsJSON = _context.sent;\n              return _context.abrupt(\"return\", postsJSON);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.addPost =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(post, e) {\n        var createdPost, parsedPost;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                console.log(post);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return fetch('http://localhost:9000/posts/', {\n                  method: 'POST',\n                  body: JSON.stringify(post),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 5:\n                createdPost = _context2.sent;\n                _context2.next = 8;\n                return createdPost.json();\n\n              case 8:\n                parsedPost = _context2.sent;\n                console.log(parsedPost);\n\n                _this.setState({\n                  posts: _toConsumableArray(_this.state.posts).concat([parsedPost.data])\n                });\n\n                _context2.next = 15;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](2);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 13]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.deletePost =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var deletedPost, deletedPostJSON;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return fetch('http://localhost:9000/posts/' + id, {\n                  method: 'DELETE'\n                });\n\n              case 3:\n                deletedPost = _context3.sent;\n                _context3.next = 6;\n                return deletedPost.json();\n\n              case 6:\n                deletedPostJSON = _context3.sent;\n\n                _this.setState({\n                  posts: _this.state.posts.filter(function (post) {\n                    return post._id !== id;\n                  })\n                });\n\n                console.log(deletedPostJSON);\n                _context3.next = 13;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 11]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleEdit =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(e) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this.setState({\n                  postToEdit: _objectSpread({}, _this.state.postToEdit, _defineProperty({}, e.currentTarget.name, e.currentTarget.value))\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.editPost =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(postid) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this.setState({\n                  postToEdit: _objectSpread({}, postid)\n                });\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.submitEditedPost =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id, e) {\n        var editedPost, editedPostJSON, newPostArrayWithEdited;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                e.preventDefault();\n                _context6.prev = 1;\n                _context6.next = 4;\n                return fetch('http://localhost:9000/posts/' + id, {\n                  method: 'PUT',\n                  body: JSON.stringify({\n                    title: _this.state.postToEdit.title,\n                    commentBody: _this.state.postToEdit.commentBody\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 4:\n                editedPost = _context6.sent;\n                _context6.next = 7;\n                return editedPost.json();\n\n              case 7:\n                editedPostJSON = _context6.sent;\n                newPostArrayWithEdited = _this.state.posts.map(function (post) {\n                  if (post._id === editedPostJSON.data._id) {\n                    post = editedPostJSON.data;\n                  }\n\n                  return post;\n                });\n\n                _this.setState({\n                  posts: newPostArrayWithEdited\n                });\n\n                _context6.next = 15;\n                break;\n\n              case 12:\n                _context6.prev = 12;\n                _context6.t0 = _context6[\"catch\"](1);\n                return _context6.abrupt(\"return\", _context6.t0);\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 12]]);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      posts: [],\n      postToEdit: {\n        title: '',\n        commentBody: '',\n        _id: ''\n      }\n    };\n    return _this;\n  } //get Posts from server\n\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    // Component Did Mount Check\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getPosts().then(function (posts) {\n        _this2.setState({\n          posts: posts.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } // Add a Post function to be passed down to child\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(CreatePost, {\n        addPost: this.addPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(PostsList, {\n        editPost: this.editPost,\n        posts: this.state.posts,\n        deletePost: this.deletePost,\n        postToEdit: this.state.postToEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(EditPost, {\n        submitEditedPost: this.submitEditedPost,\n        postToEdit: this.state.postToEdit,\n        handleEdit: this.handleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nexport default Posts;","map":{"version":3,"sources":["/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/src/PostsContainer/PostsContainer.jsx"],"names":["React","Component","PostsList","CreatePost","EditPost","Posts","getPosts","fetch","posts","json","postsJSON","addPost","post","e","preventDefault","console","log","method","body","JSON","stringify","headers","createdPost","parsedPost","setState","state","data","deletePost","id","deletedPost","deletedPostJSON","filter","_id","handleEdit","postToEdit","currentTarget","name","value","editPost","postid","submitEditedPost","title","commentBody","editedPost","editedPostJSON","newPostArrayWithEdited","map","then","catch","err"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PostsList from './PostsList/PostsList';\nimport CreatePost from './CreatePost/CreatePost';\nimport EditPost from './EditPost/EditPost'\n\nclass Posts extends Component {\n    constructor () {\n        super();\n\n        this.state = {\n            posts: [], \n            postToEdit : {\n                title: '',\n                commentBody: '', \n                _id: ''\n            }\n\n        }\n    }\n\n    //get Posts from server\n    getPosts = async () => {\n        const posts = await fetch('http://localhost:9000/posts');\n        const postsJSON = await posts.json();\n        return postsJSON\n      }\n\n    // Component Did Mount Check\n      componentDidMount(){\n        this.getPosts().then((posts) => {\n          this.setState({posts: posts.data})\n\n        }).catch((err) => {\n          console.log(err);\n        })\n      }\n\n\n  \n    // Add a Post function to be passed down to child\n\n    addPost = async (post, e) => {\n\n        e.preventDefault();\n        console.log(post);\n\n        try {\n\n\n              const createdPost = await fetch('http://localhost:9000/posts/', {\n              method: 'POST',\n              body: JSON.stringify(post),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n      \n            const parsedPost = await createdPost.json();\n            console.log(parsedPost)\n      \n            this.setState({posts: [...this.state.posts, parsedPost.data]})\n        \n          \n        } catch (err) {\n\n        }\n\n    }\n\n\n    // Delete Post function \n    deletePost = async (id) => {\n\n        try {\n            const deletedPost = await fetch('http://localhost:9000/posts/' + id, {\n                method: 'DELETE'\n            });\n\n            const deletedPostJSON = await deletedPost.json();\n\n            this.setState({posts: this.state.posts.filter((post)=> post._id !== id)})\n\n            console.log(deletedPostJSON)\n\n        } catch (err) {\n\n        }\n        \n\n    }\n\n\n    // Edit Post \n\n    handleEdit = async (e) => {\n        this.setState({\n            postToEdit : {\n                ... this.state.postToEdit,\n                [e.currentTarget.name]: e.currentTarget.value\n            }\n        })\n    }\n\n\n    editPost = async (postid) => {\n    \n        this.setState({\n          postToEdit: {\n            ...postid\n          }\n        })\n      }\n\n\n    submitEditedPost = async (id, e) => {\n        e.preventDefault()\n        try {\n            const editedPost = await fetch ('http://localhost:9000/posts/' + id, {\n                method: 'PUT', \n                body: JSON.stringify({\n                    title: this.state.postToEdit.title,\n                    commentBody: this.state.postToEdit.commentBody\n\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n\n                }\n            })\n        \n            const editedPostJSON = await editedPost.json();\n    \n            const newPostArrayWithEdited = this.state.posts.map((post) => {\n      \n              if(post._id === editedPostJSON.data._id){\n                post = editedPostJSON.data\n              }\n      \n              return post\n            });\n            this.setState({\n                posts: newPostArrayWithEdited\n            })\n\n        } catch (err) {\n            return err\n        }    \n    }\n\n    \n    \n    render() {\n\n        return (\n\n            <div>\n                <CreatePost addPost = {this.addPost} />\n                <PostsList editPost = {this.editPost} posts = {this.state.posts} deletePost ={this.deletePost} postToEdit={this.state.postToEdit}/>\n                <EditPost submitEditedPost = {this.submitEditedPost} postToEdit={this.state.postToEdit} handleEdit={this.handleEdit} />\n\n            </div>\n        )\n\n    }\n\n\n\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}