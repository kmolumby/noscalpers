{"ast":null,"code":"import _classCallCheck from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/src/EventContainer/GoogleMapContainer/GoogleMapContainer.jsx\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport ReactDOM from 'react-dom';\nvar mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this));\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    var _this$props$initialCe = _this.props.initialCenter,\n        lat = _this$props$initialCe.lat,\n        lng = _this$props$initialCe.lng;\n    _this.state = {\n      events: [],\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      },\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n\n            _this2.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n          });\n        }\n      }\n\n      this.loadMap();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  }, {\n    key: \"loadMap\",\n    value: function loadMap() {\n      if (this.props && this.props.google) {\n        // checks if google is available\n        var google = this.props.google;\n        var maps = google.maps;\n        var mapRef = this.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = this.props.zoom;\n        var _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        this.map = new maps.Map(node, mapConfig);\n      }\n    }\n  }, {\n    key: \"recenterMap\",\n    value: function recenterMap() {\n      var map = this.map;\n      var current = this.state.currentLocation;\n      var google = this.props.google;\n      var maps = google.maps;\n\n      if (map) {\n        var center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this3 = this;\n\n      var children = this.props.children;\n      if (!children) return;\n      return React.Children.map(children, function (c) {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: _this3.map,\n          google: _this3.props.google,\n          mapCenter: _this3.state.currentLocation\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var allSearchResults = this.props.searchResults.map(function (searchResult, i) {\n        console.log(searchResult);\n        return React.createElement(Marker, {\n          key: i,\n          title: searchResult.displayName,\n          position: {\n            lat: searchResult.location.lat,\n            lng: searchResult.location.lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        style: mapStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        allSearchResults: allSearchResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyB3cnf0QZnOYfHCu1eElopL5grod6fyePU'\n})(MapContainer);\nMapContainer.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 39.7392,\n    lng: 104.9903\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","map":{"version":3,"sources":["/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/src/EventContainer/GoogleMapContainer/GoogleMapContainer.jsx"],"names":["React","Component","Map","GoogleApiWrapper","Marker","InfoWindow","ReactDOM","mapStyles","width","height","MapContainer","onMarkerClick","props","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","initialCenter","lat","lng","events","currentLocation","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","loadMap","prevProps","prevState","google","recenterMap","maps","mapRef","refs","map","node","findDOMNode","zoom","center","LatLng","mapConfig","Object","assign","current","panTo","children","Children","c","cloneElement","mapCenter","allSearchResults","searchResults","searchResult","i","console","log","displayName","location","name","apiKey","defaultProps","visible"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport ReactDOM from 'react-dom';\n\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport class MapContainer extends Component {\n    constructor() {\n        super();\n        const { lat, lng } = this.props.initialCenter;\n         this.state = {\n               events : [],\n               currentLocation: {\n               lat: lat,\n               lng: lng\n            },\n            showingInfoWindow: false,  \n            activeMarker: {},         \n            selectedPlace: {} \n          };\n     \n    }\n    \n    onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n\n  render() {\n\n    const allSearchResults = this.props.searchResults.map((searchResult, i) =>{\n      console.log(searchResult);\n      return (<Marker key={i} title={searchResult.displayName} \n        position={{lat: searchResult.location.lat,\n            lng: searchResult.location.lng\n        }}\n       />)\n    });\n\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        \n     >\n        <Marker\n          onClick={this.onMarkerClick}\n         allSearchResults= {allSearchResults}\n\n        />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n\n}\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyB3cnf0QZnOYfHCu1eElopL5grod6fyePU'\n})(MapContainer);\n\nMapContainer.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 39.7392,\n    lng: 104.9903\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};"]},"metadata":{},"sourceType":"module"}