{"ast":null,"code":"import _toConsumableArray from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/src/PostsContainer/PostsContainer.jsx\";\nimport React, { Component } from 'react';\nimport CreatePost from './CreatePost/CreatePost';\nimport PostList from './PostsList/PostsList';\nimport { Col, Container, Row } from 'reactstrap';\nimport './PostContainer.css';\nimport Cookie from 'js-cookie';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts() {\n    var _this;\n\n    _classCallCheck(this, Posts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Posts).call(this));\n    _this.getPosts =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var posts, postsJSON;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:9000/posts', {\n                credentials: 'include'\n              });\n\n            case 2:\n              posts = _context.sent;\n              _context.next = 5;\n              return posts.json();\n\n            case 5:\n              postsJSON = _context.sent;\n              return _context.abrupt(\"return\", postsJSON);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.addPost =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(post, e) {\n        var csrfCookie, createdPost, parsedPost;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                console.log(post);\n                _context2.prev = 2;\n                csrfCookie = Cookie.get(csrftoken);\n                _context2.next = 6;\n                return fetch('http://localhost:8000/posts/', {\n                  method: 'POST',\n                  body: JSON.stringify(post),\n                  credentials: 'include',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': csrfCookie\n                  }\n                });\n\n              case 6:\n                createdPost = _context2.sent;\n                _context2.next = 9;\n                return createdPost.json();\n\n              case 9:\n                parsedPost = _context2.sent;\n                console.log(parsedPost);\n\n                if (parsedPost.status === 200) {\n                  _this.setState({\n                    posts: _toConsumableArray(_this.state.posts).concat([parsedPost.data])\n                  });\n                }\n\n                console.log('getting here');\n                _context2.next = 17;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](2);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 15]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.deletePost =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var deletedPost, deletedPostJSON;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return fetch('http://localhost:8000/posts/' + id, {\n                  method: 'DELETE',\n                  credentials: 'include'\n                });\n\n              case 3:\n                deletedPost = _context3.sent;\n                _context3.next = 6;\n                return deletedPost.json();\n\n              case 6:\n                deletedPostJSON = _context3.sent;\n\n                _this.setState({\n                  posts: _this.state.posts.filter(function (post) {\n                    return post._id !== id;\n                  })\n                });\n\n                console.log(deletedPostJSON);\n                _context3.next = 13;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 11]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.submitEdit =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(postToEdit) {\n        var editedPost, editedPostJSON, newPostArrayWithEdited;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(postToEdit);\n                _context4.prev = 1;\n                _context4.next = 4;\n                return fetch('http://localhost:8000/posts/' + postToEdit._id, {\n                  method: 'PUT',\n                  credentials: 'include',\n                  body: JSON.stringify({\n                    title: postToEdit.title,\n                    commentBody: postToEdit.commentBody\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 4:\n                editedPost = _context4.sent;\n                _context4.next = 7;\n                return editedPost.json();\n\n              case 7:\n                editedPostJSON = _context4.sent;\n                newPostArrayWithEdited = _this.state.posts.map(function (post) {\n                  if (post._id === editedPostJSON.data._id) {\n                    post = editedPostJSON.data;\n                  }\n\n                  return post;\n                });\n\n                _this.setState({\n                  posts: newPostArrayWithEdited,\n                  modal: false\n                });\n\n                _context4.next = 15;\n                break;\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](1);\n                return _context4.abrupt(\"return\", _context4.t0);\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 12]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      posts: [],\n      newPost: {\n        \"title\": \"\",\n        \"commentBody\": \"\",\n        \"author\": \"\"\n      }\n    };\n    return _this;\n  } //get Posts from server\n\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    // Component Did Mount Check\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getPosts().then(function (posts) {\n        _this2.setState({\n          posts: posts.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } // Add a Post function to be passed down to child\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        className: \"post-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(CreatePost, {\n        username: this.props.username,\n        addPost: this.addPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"post-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Recent Ticket Posts\"), React.createElement(PostList, {\n        username: this.props.username,\n        deletePost: this.deletePost,\n        posts: this.state.posts,\n        submitEdit: this.submitEdit,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nexport default Posts;","map":{"version":3,"sources":["/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-frontend/src/PostsContainer/PostsContainer.jsx"],"names":["React","Component","CreatePost","PostList","Col","Container","Row","Cookie","Posts","getPosts","fetch","credentials","posts","json","postsJSON","addPost","post","e","preventDefault","console","log","csrfCookie","get","csrftoken","method","body","JSON","stringify","headers","createdPost","parsedPost","status","setState","state","data","deletePost","id","deletedPost","deletedPostJSON","filter","_id","submitEdit","postToEdit","title","commentBody","editedPost","editedPostJSON","newPostArrayWithEdited","map","modal","newPost","then","catch","err","props","username","handleChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport CreatePost from './CreatePost/CreatePost';\nimport PostList from './PostsList/PostsList';\nimport { Col, Container, Row} from 'reactstrap';\nimport './PostContainer.css';\nimport Cookie from 'js-cookie'\n\n\nclass Posts extends Component {\n    constructor () {\n        super();\n\n        this.state = {\n            posts: [],\n            newPost: {\n                \"title\": \"\",\n                \"commentBody\": \"\",\n                \"author\": \"\"\n            }\n            \n        }\n    }\n\n    //get Posts from server\n    getPosts = async () => {\n        const posts = await fetch('http://localhost:9000/posts', {\n            credentials: 'include'\n          \n        });\n        const postsJSON = await posts.json();\n        return postsJSON\n      }\n\n    // Component Did Mount Check\n      componentDidMount(){\n        this.getPosts().then((posts) => {\n          this.setState({posts: posts.data})\n\n        }).catch((err) => {\n          console.log(err);\n        })\n      }\n\n\n  \n    // Add a Post function to be passed down to child\n\n    addPost = async (post, e) => {\n\n        e.preventDefault();\n        console.log(post);\n\n        try {\n\n              const csrfCookie = Cookie.get(csrftoken)\n              const createdPost = await fetch('http://localhost:8000/posts/', {\n              method: 'POST',\n              body: JSON.stringify(post),\n              credentials: 'include',\n              headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrfCookie\n              }\n\n            });\n            const parsedPost = await createdPost.json();\n\n            console.log(parsedPost)\n\n            if(parsedPost.status === 200){\n                this.setState({\n                    posts: [...this.state.posts, parsedPost.data]\n                })\n            }\n        \n            console.log('getting here')\n\n          \n        } catch (err) {\n\n        }\n\n    }\n\n\n    // Delete Post function \n    deletePost = async (id) => {\n\n        try {\n            const deletedPost = await fetch('http://localhost:8000/posts/' + id, {\n                method: 'DELETE',\n                credentials: 'include'\n            });\n\n            const deletedPostJSON = await deletedPost.json();\n\n            this.setState({posts: this.state.posts.filter((post)=> post._id !== id)})\n\n            console.log(deletedPostJSON)\n\n        } catch (err) {\n\n        }\n        \n\n    }\n\n\n    // Edit Post \n\n  \n    \n    submitEdit = async (postToEdit) => {\n        console.log(postToEdit)\n            try {\n                const editedPost = await fetch ('http://localhost:8000/posts/' + postToEdit._id, {\n                    method: 'PUT', \n                    credentials: 'include',\n\n                    body: JSON.stringify({\n\n                        title: postToEdit.title,\n                        commentBody: postToEdit.commentBody\n\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json'\n\n                    }\n                })\n            \n                const editedPostJSON = await editedPost.json();\n        \n                const newPostArrayWithEdited = this.state.posts.map((post) => {\n        \n                if(post._id === editedPostJSON.data._id){\n                    post = editedPostJSON.data\n                }\n        \n                return post\n                });\n                this.setState({\n                    posts: newPostArrayWithEdited,\n                    modal: false\n                        })\n\n            } catch (err) {\n                return err\n            }    \n        }\n    \n    \n    render() {\n\n        return (\n            <Container className=\"post-container\">\n                <Row>\n                    <Col >  \n                      <CreatePost username = {this.props.username} addPost = {this.addPost} />\n                    </Col>\n                    <Col className=\"post-list\"> \n                        <h1>Recent Ticket Posts</h1>\n                        <PostList  username = {this.props.username} deletePost = {this.deletePost} posts={this.state.posts} submitEdit = {this.submitEdit} handleChange = {this.handleChange}/>\n                    </Col>\n\n             </Row>\n                       \n            </Container>\n          \n        )\n\n    }\n\n\n\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}