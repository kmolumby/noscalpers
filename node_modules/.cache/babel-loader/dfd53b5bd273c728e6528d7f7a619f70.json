{"ast":null,"code":"import _defineProperty from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/src/PostsContainer/PostsContainer.jsx\";\nimport React, { Component } from 'react';\nimport CreatePost from './CreatePost/CreatePost';\nimport PostList from './PostsList/PostsList';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts() {\n    var _this;\n\n    _classCallCheck(this, Posts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Posts).call(this));\n    _this.getPosts =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var posts, postsJSON;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:9000/posts');\n\n            case 2:\n              posts = _context.sent;\n              _context.next = 5;\n              return posts.json();\n\n            case 5:\n              postsJSON = _context.sent;\n              return _context.abrupt(\"return\", postsJSON);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.addPost =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(post, e) {\n        var createdPost, parsedPost;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                console.log(post);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return fetch('http://localhost:9000/posts/', {\n                  method: 'POST',\n                  body: JSON.stringify(post),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 5:\n                createdPost = _context2.sent;\n                _context2.next = 8;\n                return createdPost.json();\n\n              case 8:\n                parsedPost = _context2.sent;\n                console.log(parsedPost);\n\n                if (parsedPost.status === 200) {\n                  document.getElementById(\"new-post-form\").reset();\n\n                  _this.setState({\n                    posts: _toConsumableArray(_this.state.posts).concat([parsedPost.data])\n                  });\n                }\n\n                _context2.next = 15;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](2);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 13]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.deletePost =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var deletedPost, deletedPostJSON;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return fetch('http://localhost:9000/posts/' + id, {\n                  method: 'DELETE'\n                });\n\n              case 3:\n                deletedPost = _context3.sent;\n                _context3.next = 6;\n                return deletedPost.json();\n\n              case 6:\n                deletedPostJSON = _context3.sent;\n\n                _this.setState({\n                  posts: _this.state.posts.filter(function (post) {\n                    return post._id !== id;\n                  })\n                });\n\n                console.log(deletedPostJSON);\n                _context3.next = 13;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 11]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleNewChange = function (e) {\n      console.log(_this.state.postToEdit);\n\n      _this.setState({\n        postToEdit: _objectSpread({}, _this.state.postToEdit, _defineProperty({}, e.currentTarget.name, e.currentTarget.value))\n      });\n    };\n\n    _this.submitEdit =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id, e) {\n        var editedPost, editedPostJSON, newPostArrayWithEdited;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                e.preventDefault();\n                _context4.prev = 1;\n                _context4.next = 4;\n                return fetch('http://localhost:9000/posts/' + id, {\n                  method: 'PUT',\n                  body: JSON.stringify({\n                    title: _this.state.postToEdit.title,\n                    commentBody: _this.state.postToEdit.commentBody\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 4:\n                editedPost = _context4.sent;\n                _context4.next = 7;\n                return editedPost.json();\n\n              case 7:\n                editedPostJSON = _context4.sent;\n                newPostArrayWithEdited = _this.state.posts.map(function (post) {\n                  if (post._id === editedPostJSON.data._id) {\n                    post = editedPostJSON.data;\n                  }\n\n                  return post;\n                });\n\n                _this.setState({\n                  posts: newPostArrayWithEdited,\n                  modal: false\n                });\n\n                _context4.next = 15;\n                break;\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](1);\n                return _context4.abrupt(\"return\", _context4.t0);\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 12]]);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      posts: [],\n      postToEdit: {\n        title: '',\n        commentBody: '',\n        _id: ''\n      }\n    };\n    return _this;\n  } //get Posts from server\n\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    // Component Did Mount Check\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getPosts().then(function (posts) {\n        _this2.setState({\n          posts: posts.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } // Add a Post function to be passed down to child\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(CreatePost, {\n        addPost: this.addPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(PostList, {\n        deletePost: this.deletePost,\n        posts: this.state.posts,\n        submitEdit: this.submitEdit,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nexport default Posts;","map":{"version":3,"sources":["/Users/kmolumby/wdi/project3/no-scalpers/no-scalpers-react-app/src/PostsContainer/PostsContainer.jsx"],"names":["React","Component","CreatePost","PostList","Posts","getPosts","fetch","posts","json","postsJSON","addPost","post","e","preventDefault","console","log","method","body","JSON","stringify","headers","createdPost","parsedPost","status","document","getElementById","reset","setState","state","data","deletePost","id","deletedPost","deletedPostJSON","filter","_id","handleNewChange","postToEdit","currentTarget","name","value","submitEdit","title","commentBody","editedPost","editedPostJSON","newPostArrayWithEdited","map","modal","then","catch","err","handleChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport CreatePost from './CreatePost/CreatePost';\nimport PostList from './PostsList/PostsList'\n\nclass Posts extends Component {\n    constructor () {\n        super();\n\n        this.state = {\n            posts: [],\n            postToEdit: {\n                title: '',\n                commentBody: '',\n                _id: ''\n              },\n        }\n    }\n\n    //get Posts from server\n    getPosts = async () => {\n        const posts = await fetch('http://localhost:9000/posts');\n        const postsJSON = await posts.json();\n        return postsJSON\n      }\n\n    // Component Did Mount Check\n      componentDidMount(){\n        this.getPosts().then((posts) => {\n          this.setState({posts: posts.data})\n\n        }).catch((err) => {\n          console.log(err);\n        })\n      }\n\n\n  \n    // Add a Post function to be passed down to child\n\n    addPost = async (post, e) => {\n\n        e.preventDefault();\n        console.log(post);\n\n        try {\n\n\n              const createdPost = await fetch('http://localhost:9000/posts/', {\n              method: 'POST',\n              body: JSON.stringify(post),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n      \n            const parsedPost = await createdPost.json();\n            console.log(parsedPost)\n\n            if(parsedPost.status === 200){\n                document.getElementById(\"new-post-form\").reset();\n                this.setState({\n                    posts: [...this.state.posts, parsedPost.data]\n                })\n            }\n        \n\n          \n        } catch (err) {\n\n        }\n\n    }\n\n\n    // Delete Post function \n    deletePost = async (id) => {\n\n        try {\n            const deletedPost = await fetch('http://localhost:9000/posts/' + id, {\n                method: 'DELETE'\n            });\n\n            const deletedPostJSON = await deletedPost.json();\n\n            this.setState({posts: this.state.posts.filter((post)=> post._id !== id)})\n\n            console.log(deletedPostJSON)\n\n        } catch (err) {\n\n        }\n        \n\n    }\n\n\n    // Edit Post \n\n    handleNewChange = (e) => {\n        console.log(this.state.postToEdit)\n        this.setState({\n            postToEdit: {\n                ...this.state.postToEdit,\n                [e.currentTarget.name]: e.currentTarget.value\n            }\n        })\n    }\n    \n    submitEdit = async (id, e) => {\n            e.preventDefault()\n            try {\n                const editedPost = await fetch ('http://localhost:9000/posts/' + id, {\n                    method: 'PUT', \n                    body: JSON.stringify({\n                        title: this.state.postToEdit.title,\n                        commentBody: this.state.postToEdit.commentBody\n\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json'\n\n                    }\n                })\n            \n                const editedPostJSON = await editedPost.json();\n        \n                const newPostArrayWithEdited = this.state.posts.map((post) => {\n        \n                if(post._id === editedPostJSON.data._id){\n                    post = editedPostJSON.data\n                }\n        \n                return post\n                });\n                this.setState({\n                    posts: newPostArrayWithEdited,\n                    modal: false\n                        })\n\n            } catch (err) {\n                return err\n            }    \n        }\n    \n    \n    render() {\n\n        return (\n\n            <div>\n                <CreatePost addPost = {this.addPost} />\n                <PostList deletePost = {this.deletePost} posts={this.state.posts}  submitEdit = {this.submitEdit} handleChange = {this.handleChange}/>\n\n            </div>\n        )\n\n    }\n\n\n\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}